[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2025-02-17 23:29:46.140872",
  "module": "MBW Integration DMS",
  "name": "Xác định đvt chẵn lẻ của Item",
  "script": "frappe.ui.form.on('Item', {\n    validate: function(frm) {\n        ensure_unique_selection(frm, 'uoms', 'unit_odd');\n        ensure_unique_selection(frm, 'uoms', 'unit_even');\n    }\n});\n\nfunction ensure_unique_selection(frm, child_table, fieldname) {\n    let selected_rows = frm.doc[child_table].filter(row => row[fieldname]);\n\n    if (selected_rows.length > 1) {\n        selected_rows.forEach((row, index) => {\n            if (index > 0) {\n                row[fieldname] = 0;\n            }\n        });\n        frappe.msgprint(__('Chỉ được chọn 1 sản phẩm là đơn vị chẵn và 1 sản phẩm là đơn vị lẻ '));\n        frm.refresh_field(child_table);\n    }\n}\n\nfrappe.ui.form.on('UOM Conversion Detail', {\n    unit_odd: function(frm, cdt, cdn) {\n        toggle_other_rows(frm, cdt, cdn, 'unit_odd', 'unit_even');\n    },\n    unit_even: function(frm, cdt, cdn) {\n        toggle_other_rows(frm, cdt, cdn, 'unit_even', 'unit_odd');\n    }\n});\n\nfunction toggle_other_rows(frm, cdt, cdn, selected_field, other_field) {\n    let child = locals[cdt][cdn];\n\n    if (child[selected_field]) {\n        frm.doc.uoms.forEach(row => {\n            if (row.name !== child.name) {\n                row[selected_field] = 0;\n            }\n            // Khi chọn một dòng là chẵn/lẻ, tự động bỏ tích dòng đó ở trường còn lại\n            row[other_field] = (row.name === child.name) ? 0 : row[other_field];\n        });\n        frm.refresh_field('uoms');\n    }\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2025-02-18 16:44:15.819834",
  "module": "MBW Integration DMS",
  "name": "Ko cho phép sửa các trường từ DMS trong SO",
  "script": "frappe.ui.form.on(\"Sales Order\", {\n    refresh: function (frm) {\n        if (frm.doc.is_sale_dms == 1 && frm.doc.docstatus == 0) {\n            \n            let fields_to_disable = [\n                \"customer\", \"dms_so_code\", \"delivery_date\", \"dms_so_id\",\n                \"set_warehouse\", \"discount_amount\", \"apply_discount_on\"\n            ];\n            fields_to_disable.forEach(field => {\n                frm.set_df_property(field, \"read_only\", 1);\n            });\n\n            // Chặn thêm/xóa hàng trong bảng con\n            if (frm.fields_dict[\"items\"] && frm.fields_dict[\"items\"].grid) {\n                frm.fields_dict[\"items\"].grid.df.cannot_add_rows = true;\n                frm.fields_dict[\"items\"].grid.df.cannot_delete_rows = true;\n                frm.refresh_field(\"items\");\n            }\n\n            if (frm.fields_dict[\"promotion_result\"] && frm.fields_dict[\"promotion_result\"].grid) {\n                frm.fields_dict[\"promotion_result\"].grid.df.cannot_add_rows = true;\n                frm.fields_dict[\"promotion_result\"].grid.df.cannot_delete_rows = true;\n                frm.refresh_field(\"promotion_result\");\n            }\n\n            // Khóa tất cả các trường trong bảng con sau khi form load\n            setTimeout(function () {\n                disable_child_table_fields(frm);\n            }, 500); // Chờ 0.5 giây để form load xong\n        }\n    }\n});\n\n// Hàm vô hiệu hóa các trường trong bảng con\nfunction disable_child_table_fields(frm) {\n    // Sales Order Item (items table)\n    if (frm.fields_dict[\"items\"] && frm.fields_dict[\"items\"].grid) {\n        frm.fields_dict[\"items\"].grid.grid_rows.forEach((row) => {\n            console.log(row.grid_form);\n            if (!row.grid_form) return;  // Kiểm tra nếu `grid_form` chưa được load\n\n            let fields_to_disable = [\"item_code\", \"qty\", \"rate\", \"discount_amount\", \"additional_notes\", \"is_free_item\", \"uom\"];\n            fields_to_disable.forEach((field) => {\n                if (row.grid_form.fields_dict[field]) {\n                    row.grid_form.fields_dict[field].df.read_only = 1;\n                    row.grid_form.fields_dict[field].refresh();\n                }\n            });\n        });\n        frm.refresh_field(\"items\");\n    }\n\n    // DMS Promotions Result (promotion_result table)\n    if (frm.fields_dict[\"promotion_result\"] && frm.fields_dict[\"promotion_result\"].grid) {\n        frm.fields_dict[\"promotion_result\"].grid.grid_rows.forEach((row) => {\n            if (!row.grid_form) return;\n\n            let fields_to_disable = [\n                \"promotion_id\",\n                \"promotion_code\",\n                \"promotions_name\",\n                \"promotion_item_id\",\n                \"promotion_item_code\",\n                \"promotional_item_name\",\n                \"promotional_quantity\",\n                \"promotional_amount\",\n            ];\n            fields_to_disable.forEach((field) => {\n                if (row.grid_form.fields_dict[field]) {\n                    row.grid_form.fields_dict[field].df.read_only = 1;\n                    row.grid_form.fields_dict[field].refresh();\n                }\n            });\n        });\n        frm.refresh_field(\"promotion_result\");\n    }\n}\n\n// Đảm bảo từng dòng của bảng con bị khóa khi được mở\nfrappe.ui.form.on(\"Sales Order Item\", {\n    grid_row_render: function (frm, cdt, cdn) {\n        disable_child_table_fields(frm);\n    },\n});\n\nfrappe.ui.form.on(\"DMS Promotions Result\", {\n    grid_row_render: function (frm, cdt, cdn) {\n        disable_child_table_fields(frm);\n    },\n});\n",
  "view": "Form"
 }
]